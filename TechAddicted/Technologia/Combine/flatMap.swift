//
//  File.swift
//  TechAddicted
//
//  Created by Drew on 18.06.2025.
//

import Foundation
import Combine

// MARK: flatMap –≤ Combine

/*
 flatMap –≤ Combine ‚Äî —ç—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–∞–∂–¥–æ–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –æ–¥–Ω–æ–≥–æ –ø–∞–±–ª–∏—à–µ—Ä–∞ –≤ –Ω–æ–≤—ã–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π –ø–∞–±–ª–∏—à–µ—Ä,
 –∞ –∑–∞—Ç–µ–º –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç (flatten) –≤—Å–µ —ç—Ç–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∏–º—ã –≤ –æ–¥–∏–Ω.
 
 üìå –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è:
     ‚Ä¢    –¢—ã –ø–æ–ª—É—á–∞–µ—à—å –∑–Ω–∞—á–µ–Ω–∏–µ A,
     ‚Ä¢    –ü—Ä–µ–≤—Ä–∞—â–∞–µ—à—å –µ–≥–æ –≤ Publisher,
     ‚Ä¢    flatMap –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —ç—Ç–æ—Ç Publisher –∏ ¬´–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç¬ª –≤—Å—ë –≤ –æ–±—â–∏–π –ø–æ—Ç–æ–∫.
 
 üß† –ö–æ–≥–¥–∞ —ç—Ç–æ –Ω—É–∂–Ω–æ?

 –ö–æ–≥–¥–∞ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ upstream –≤—ã–∑—ã–≤–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Publisher, –∏ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –µ—ë —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
 
 
 
 */

private func test() {
    var cancellables = Set<AnyCancellable>()
    
    let userIDPublisher = Just("123")
        .setFailureType(to: Error.self) // –ø–æ—Ç–æ–º—É —á—Ç–æ fetchUserDetails –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Publisher —Å Error

    userIDPublisher
        .flatMap { id in
            fetchUserDetails(for: id)
        }
        .sink(
            receiveCompletion: { completion in
                print("Finished with: \(completion)")
            },
            receiveValue: { user in
                print("User name: \(user.name)")
            }
        )
        .store(in: &cancellables)
}

private struct User: Decodable {
    let id: String
    let name: String
    let email: String
}

private func fetchUserDetails(for userID: String) -> AnyPublisher<User, Error> {
    let urlString = "https://api.example.com/users/\(userID)"
    guard let url = URL(string: urlString) else {
        return Fail(error: URLError(.badURL))
            .eraseToAnyPublisher()
    }

    return URLSession.shared.dataTaskPublisher(for: url)
        .map(\.data)
        .decode(type: User.self, decoder: JSONDecoder())
        .eraseToAnyPublisher()
}

/*
üìå –ó–¥–µ—Å—å:
    ‚Ä¢    Just("123") ‚Äî –¥–∞—ë—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ‚Ä¢    fetchUserDetails(for:) ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç AnyPublisher<User, Error>.
    ‚Ä¢    flatMap –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç fetchUserDetails –∏ ‚Äú–≤—ã—Ç—è–Ω—É—Ç—å‚Äù User –Ω–∞—Ä—É–∂—É –≤ –æ–±—â–∏–π –ø–æ—Ç–æ–∫.

‚∏ª

‚ö†Ô∏è –í–∞–∂–Ω–æ:
    ‚Ä¢    flatMap –Ω–µ –æ—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ publisher‚Äô—ã, –µ—Å–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –≠—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç switchToLatest, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π.
*/
