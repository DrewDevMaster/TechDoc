//
//  DataRace.swift
//  TechAddicted
//
//  Created by Drew on 18.06.2025.
//

import Foundation

// MARK: - Data race

/*
 
Data race (—Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–∫–∏ –¥–∞–Ω–Ω—ã—Ö) ‚Äî —ç—Ç–æ –æ–ø–∞—Å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –∫–æ–≥–¥–∞ –¥–≤–∞ –∏–ª–∏ –±–æ–ª–µ–µ –ø–æ—Ç–æ–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –æ–±–ª–∞—Å—Ç–∏ –ø–∞–º—è—Ç–∏, –∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –∏–∑–º–µ–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–∏–º–∏.

‚∏ª

üß† –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ data race:
    1.    –î–æ—Å—Ç—É–ø –∫ –æ–±—â–∏–º –¥–∞–Ω–Ω—ã–º (shared mutable state)
    2.    –•–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –ø–∏—à–µ—Ç
    3.    –ù–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ DispatchQueue, locks, @MainActor, isolated –∏ —Ç.–ø.)

‚∏ª

üî• –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ data race?
    ‚Ä¢    –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏: –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã, –ø–æ—Ç–µ—Ä—è–Ω—ã, –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã.
    ‚Ä¢    –ú–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –∫—Ä–∞—à–∏, —É—Ç–µ—á–∫–∏, –±–∞–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏.
    ‚Ä¢    –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –æ–ø–∞—Å–Ω–æ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å—é (DispatchQueue, Task, OperationQueue, etc.).

üî• –†–µ–∞–ª—å–Ω–∏–π –ø—Ä–∏–º–µ—Ä (–ú–æ–π –æ–ø—ã—Ç)
–ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å CoreData
*/

private func test2() {
   var counter = 0

   DispatchQueue.global().async {
       for _ in 0..<1000 {
           counter += 1
       }
   }

   DispatchQueue.global().async {
       for _ in 0..<1000 {
           counter += 1
       }
   }
}

/*
‚ùóÔ∏è–û–±–∞ –ø–æ—Ç–æ–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç counter.
–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç—ã –Ω–µ –ø–æ–ª—É—á–∏—à—å 2000, –∞ —á—Ç–æ-—Ç–æ –º–µ–Ω—å—à–µ –∏–ª–∏ –≤–æ–æ–±—â–µ —Å–ª—É—á–∞–π–Ω–æ–µ.



‚úÖ –ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å—Å—è?

–ü–æ–¥—Ö–æ–¥
–ü—Ä–∏–º–µ—Ä
üßµ –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è
–ò—Å–ø–æ–ª—å–∑—É–π DispatchQueue(label:) –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏
NSLock, os_unfair_lock, @SynchronizedActor
üßë‚Äçüéì –ê–∫—Ç–æ—Ä—ã (actor)
Swift Concurrency ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–∑–æ–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
üßµ @MainActor
–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –¥–æ—Å—Ç—É–ø –∏–¥—ë—Ç —Ç–æ–ª—å–∫–æ —Å main thread
üßæ Read/Write Barriers
–°–ª–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: DispatchQueue —Å .barrier —Ñ–ª–∞–≥–æ–º

üîê –ü—Ä–∏–º–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:

let queue = DispatchQueue(label: "com.example.safe")

queue.async {
    counter += 1
}

‚úÖ –ß–µ—Ä–µ–∑ actor (Swift Concurrency):

actor Counter {
    private var value = 0

    func increment() {
        value += 1
    }

    func getValue() -> Int {
        return value
    }
}

üìã –í—ã–≤–æ–¥:

–í–æ–ø—Ä–æ—Å
–û—Ç–≤–µ—Ç
–ß—Ç–æ —Ç–∞–∫–æ–µ data race?
–ù–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º
–ß–µ–º –æ–ø–∞—Å–µ–Ω?
–ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å, –±–∞–≥–∏, –∫—Ä–∞—à–∏
–ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å—Å—è?
–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: serial queue, locks, actor
–ì–¥–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è?
Background-–∑–∞–¥–∞—á–∏, UI-—Ä–µ–Ω–¥–µ—Ä, Task, async


‚úÖ –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å?

1. –ö–æ–Ω—Ç—Ä–æ–ª—å —á–µ—Ä–µ–∑ DispatchQueue (Serial) –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏ —á—Ç–µ–Ω–∏–π, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—ã–∑—ã–≤–∞—é—â–∏–π –ø–æ—Ç–æ–∫.
*/

private func test3() {
   let syncQueue = DispatchQueue(label: "sync.counter") // serial

   var counter = 0

   for _ in 0..<1000 {
       syncQueue.async {
           counter += 1
       }
   }
}

/*
2. –ö–æ–Ω—Ç—Ä–æ–ª—å —á–µ—Ä–µ–∑ Lock (NSLock)
 üîí lock() / unlock() –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç, —á—Ç–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –∑–∞ —Ä–∞–∑ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ.

 ‚û° –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–µ–∫—Ü–∏–π –≤ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ–π –ª–æ–≥–∏–∫–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ Objective-C-–ø–æ–¥–æ–±–Ω—ã—Ö API.
 */

private func test4() {
   
   let lock = NSLock()
   var counter = 0
   
   DispatchQueue.global().async {
       for _ in 0..<1000 {
           lock.lock()
           counter += 1
           lock.unlock()
       }
   }
}


//üõ° 3. –ö–æ–Ω—Ç—Ä–æ–ª—å —á–µ—Ä–µ–∑ @MainActor

@MainActor
fileprivate class AppState1 {
   var counter = 0

   func increment() async {
       counter += 1
   }
   
   private func test5() {
       let state = AppState1()

       Task {
           await state.increment()
       }
   }
}

/*
üîí –í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ AppState –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è runtime isolation. –ï—Å–ª–∏ @MainActor —Ç–æ –ø–æ—Ç–æ–∫ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–∏ –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ main


‚û° –•–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è SwiftUI –∏–ª–∏ –ª–æ–≥–∏–∫–∏, —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å UI.
*/

//üõ° 4. –ö–æ–Ω—Ç—Ä–æ–ª—å —á–µ—Ä–µ–∑ isolated –∏ actor (Swift Concurrency)

private actor Counter {
   private var value = 0

   func increment() {
       value += 1
   }

   func getValue() -> Int {
       value
   }
}

private func test6() {
   // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
   let counter = Counter()

   Task {
       await counter.increment()
   }
}

/*
üîí actor –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –∑–∞ —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø –∫ –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é.

‚û° –≠—Ç–æ —Å–∞–º—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –±–æ—Ä—å–±—ã —Å data race –≤ Swift 5.5+.


üß™ –í–∏–∑—É–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ

–ü–æ–¥—Ö–æ–¥
–ü–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è UI?
–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å

DispatchQueue
‚úÖ –î–∞
‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–æ
‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π

NSLock
‚úÖ –î–∞
‚ùå –õ—É—á—à–µ –∏–∑–±–µ–≥–∞—Ç—å
üü° –°—Ç–∞—Ä—ã–π —Å—Ç–∏–ª—å

@MainActor
‚úÖ –î–∞
‚úÖ –ò–¥–µ–∞–ª–µ–Ω
‚úÖ Swift 5.5+

actor/isolated
‚úÖ –î–∞
‚ö†Ô∏è –õ—É—á—à–µ –Ω–µ –¥–ª—è UI
‚úÖ Swift 5.5+



üéØ –í—ã–≤–æ–¥:
    ‚Ä¢    actor ‚Äî –ª—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ async/await
    ‚Ä¢    @MainActor ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è UI/SwiftUI
    ‚Ä¢    DispatchQueue ‚Äî —É–¥–æ–±–Ω—ã–π –∏ –≥–∏–±–∫–∏–π –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –∫–æ–¥–∞
    ‚Ä¢    NSLock ‚Äî –≥–æ–¥–∏—Ç—Å—è –¥–ª—è –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç–∏
*/
